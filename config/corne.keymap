/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/modifiers.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E  |   R   |  T  |   |  Y  |   U   |  I  |  O  |  P  |DELETE |
            // |CTL/TAB|  A  |  S  |  D  |   F   |  G  |   |  H  |   J   |  K  |  L  |  ;  |   '   |
            // |  ALT  |  Z  |  X  |  C  |   V   |  B  |   |  N  |   M   |  ,  |  .  |  /  |ALT+ENT|
            //               |L3/ALT+TAB)|L1/BACK|SHIFT|   |SPACE|L2/ENT | GUI |

            bindings = <
&kp ESC        &kp Q  &kp W  &kp E          &kp R       &kp T        &kp Y      &kp U      &kp I      &kp O    &kp P     &kp DEL
&mt LCTRL TAB  &kp A  &kp S  &kp D          &kp F       &kp G        &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LALT       &kp Z  &kp X  &kp C          &kp V       &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp LA(RET)
                             &lt 3 LS(TAB)  &lt 1 BSPC  &kp LSHFT    &kp SPACE  &lt 2 RET  &kp LGUI
            >;
        };

        number_layer {
            display-name = "Number";

            // -----------------------------------------------------------------------------------------
            // |      | A+q | UP  | G+e | G+r | G+t |   |  *  |  7  |  8  |  9  |  /  | BACK |
            // |      |LEFT |DOWN |RIGHT|S+C+f|S+C+y|   |  +  |  4  |  5  |  6  |  -  | CALC |
            // |      |G+TAB|S+TAB| ENT |S+G+s|CAPS |   |  $  |  1  |  2  |  3  |  .  |  ,   |
            //                    |     |     |     |   |     |  =  |  0  |

            bindings = <
&trans  &kp LA(Q)    &kp UP       &kp LG(E)  &kp LG(R)      &kp LG(T)        &kp ASTRK  &kp N7   &kp N8  &kp N9  &kp FSLH   &trans
&trans  &kp LEFT     &kp DOWN     &kp RIGHT  &kp LS(LC(F))  &kp LS(LC(Y))    &kp PLUS   &kp N4   &kp N5  &kp N6  &kp MINUS  &kp C_AL_CALC
&trans  &kp LG(TAB)  &kp LS(TAB)  &kp RET    &kp LS(LG(S))  &kp CAPS         &kp DLLR   &kp N1   &kp N2  &kp N3  &kp DOT    &kp COMMA
                                  &trans     &trans         &trans           &trans     &kp RET  &kp N0
            >;
        };

        symbol_layer {
            display-name = "Symbol";

            // -----------------------------------------------------------------------------------------
            // |   ~  |  !  |  @  |  #  |  $  |  %  |   |MENU | F7  | F8  | F9  | F12 |  L3  |
            // |   [  |  {  |  (  |  )  |  }  |  ]  |   |  +  | F4  | F5  | F6  | F11 | BT1  |
            // |   |  |  ^  |  &  |  *  |  `  |  \  |   |SLCK | F1  | F2  | F3  | F10 | BT2  |
            //                    |  _  |  -  |  =  |   |BT CL|     |     |

            bindings = <
&kp TILDE  &kp EXCL   &kp AT    &kp HASH   &kp DLLR   &kp PRCNT    &kp K_APP       &kp F7  &kp F8   &kp F9  &kp F12  &to 3
&kp LBKT   &kp LBRC   &kp LPAR  &kp RPAR   &kp RBRC   &kp RBKT     &kp PLUS        &kp F4  &kp F5   &kp F6  &kp F11  &bt BT_SEL 0
&kp PIPE   &kp CARET  &kp AMPS  &kp ASTRK  &kp GRAVE  &kp BSLH     &kp SCROLLLOCK  &kp F1  &kp F2   &kp F3  &kp F10  &bt BT_SEL 1
                                &kp UNDER  &kp MINUS  &kp EQUAL    &bt BT_CLR      &trans  &trans
            >;
        };

        gaming_layer {
            display-name = "Game/Nav";

            // -----------------------------------------------------------------------------------------
            // | TAB  |     |     |     |     |     |   |HOME |PG DN|PG UP| END | INS  |  L1  |
            // | SHIFT|     |     |     |     |     |   |LEFT |DOWN | UP  |RIGHT|SELECT|NUM LK|
            // | CTL  |     |     |     |     |     |   |PREV |VOL- |VOL+ |NEXT |EJECT |  ENT |
            //                    | ENT | ESC |SPACE|   |PLAY |MUTE |STOP |

            bindings = <
&kp TAB    &trans  &trans  &trans   &trans    &trans       &kp HOME    &kp PG_DN     &kp PG_UP     &kp END     &kp INS       &to 0
&kp LSHFT  &trans  &trans  &trans   &trans    &trans       &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &kp K_SELECT  &kp LNLCK
&kp LCTRL  &trans  &trans  &trans   &trans    &trans       &kp K_PREV  &kp K_VOL_DN  &kp K_VOL_UP  &kp K_NEXT  &kp K_EJECT   &kp RET
                           &kp RET  &kp ESC   &kp SPACE    &kp K_PP    &kp K_MUTE    &kp K_STOP
            >;
        };
    };
};
